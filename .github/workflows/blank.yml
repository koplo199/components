# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  COMPONENTS: '[
            {"repo" : "doitsujin/dxvk"                  , "workflow": "artifacts.yml"          , "branch": "master", "name-prefix": "dxvk-"        , "version-prefix": "v"        , "Category": "dxvk"       , "Sub-category": ""      , "yaml-file": "14_dxvk.yml"         },
            {"repo" : "HansKristian-Work/vkd3d-proton"  , "workflow": "artifacts.yml"          , "branch": "master", "name-prefix": "vkd3d-proton-", "version-prefix": "v"        , "Category": "vkd3d"      , "Sub-category": ""      , "yaml-file": "13_vkd3d-proton.yml" },
            {"repo" : "bottlesdevs/wine"                , "workflow": "build-soda-arch.yml"    , "branch": "soda"  , "name-prefix": "soda-"        , "version-prefix": "soda-"    , "Category": "runners"    , "Sub-category": "wine"  , "yaml-file": "3_soda.yml"          },
            {"repo" : "bottlesdevs/wine"                , "workflow": "build-caffe-arch.yml"   , "branch": "caffe" , "name-prefix": "caffe-"       , "version-prefix": "caffe-"   , "Category": "runners"    , "Sub-category": "wine"  , "yaml-file": "4_caffe.yml"         },
            {"repo" : "GloriousEggroll/wine-ge-custom"  , "workflow": ""                       , "branch": "master", "name-prefix": "wine-"        , "version-prefix": ""         , "Category": "runners"    , "Sub-category": "wine"  , "yaml-file": "5_wine-GE-Proton.yml"},
            {"repo" : "GloriousEggroll/proton-ge-custom", "workflow": ""                       , "branch": "master", "name-prefix": "GE-Proton"    , "version-prefix": "GE-Proton", "Category": "runners"    , "Sub-category": "proton", "yaml-file": "10_GE-Proton.yml"    },
            {"repo" : "ishitatsuyuki/LatencyFleX"       , "workflow": "artifact.yml"           , "branch": "master", "name-prefix": "latencyflex-" , "version-prefix": ""         , "Category": "latencyflex", "Sub-category": ""      , "yaml-file": "17_latencyflex.yml"  },
            {"repo" : "jp7677/dxvk-nvapi"               , "workflow": "artifacts.yml"          , "branch": "master", "name-prefix": "dxvk-nvapi-"  , "version-prefix": ""         , "Category": "nvapi"      , "Sub-category": ""      , "yaml-file": "16_dxvk-nvapi.yml"   },
            {"repo" : "Sporif/dxvk-async"               , "workflow": ""                       , "branch": "master", "name-prefix": "dxvk-async-"  , "version-prefix": ""         , "Category": "dxvk"       , "Sub-category": ""      , "yaml-file": "15_dxvk-async.yml"   },
          ]'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - id: set-matrix
        run: echo 'version_matrix=${{ env.COMPONENTS }}' >> $GITHUB_OUTPUT
    outputs:
      version_matrix: ${{ steps.set-matrix.outputs.version_matrix }}

  # This workflow contains a single job called "download"
  download:
    needs: build-matrix
    strategy:
      matrix:
        components: ${{ fromJson(needs.build-matrix.outputs.version_matrix) }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    continue-on-error: true
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check release
        id: check-release
        uses: koplo199/actions-download-asset@1.0
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          repo: ${{ matrix.components.repo }}
          version: latest
          file: /${{ matrix.components.name-prefix }}.*tar.*/
          prefix: ${{ matrix.components.version-prefix }}

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: "bottle-components-repository"

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          repository: bottlesdevs/tools
          path: "tools"

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.components.repo }}
          path: "other-repository"
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip
          pip3 install yq

      - name: Update yml file if necessary
        id: update-yml
        working-directory: "bottle-components-repository"
        run: |
          res=$(./input_files/update_yml_entries.sh "${{ matrix.components.name-prefix }}" "${{ steps.check-release.outputs.version }}" "${{ matrix.components.Category }}" "${{ matrix.components.Sub-category }}" "stable" "$(git -C ${{ github.workspace }}/other-repository rev-list -n 1 ${{ matrix.components.version-prefix }}${{ steps.check-release.outputs.version }})" "$(pwd)/input_files/${{ matrix.components.yaml-file }}" "${{ github.workspace }}/other-repository")
          if [ "$res" = "Already up to date." ]; then
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            echo "updated=true" >> $GITHUB_OUTPUT
            release_archive=${{ steps.check-release.outputs.out }}
            if [[ $release_archive == *".tar.gz" ]] || [[ $release_archive == *".tar.xz" ]] || [[ $release_archive == *".tar.bz2" ]]; then
              python "${{ github.workspace }}/tools/MaintainersHelpers/component-generator.py" "components" "${${{ matrix.components.repo }}%/*}" "${{ matrix.components.name-prefix }}${{ steps.check-release.outputs.version }}" "${${{ matrix.components.repo }}%/*}" "stable" "${{ steps.check-release.outputs.browser_download_url }}"
              mv "${{ matrix.components.name-prefix }}${{ steps.check-release.outputs.version }}.yml" "${{ matrix.components.Category }}/${{ matrix.components.Sub-category }}"
              git add "${{ matrix.components.Category }}/${{ matrix.components.Sub-category }}/${{ matrix.components.name-prefix }}${{ steps.check-release.outputs.version }}.yml"
              git diff
            fi
          fi

      - name : Print url
        if: steps.update-yml.outputs.updated == 'true'
        working-directory: "bottle-components-repository"
        run: |
          ls "${{ matrix.components.Category }}/${{ matrix.components.Sub-category }}"
          echo ${{ steps.check-release.outputs.browser_download_url }}
          echo ${{ steps.check-release.outputs.version }}
          echo ${{ steps.check-release.outputs.out }}

      - name: Download artifact
        id: download-artifact
        if: matrix.components.workflow != '' && steps.update-yml.outputs.updated == 'false'
        uses: koplo199/action-download-artifact@1.0
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Optional, workflow file name or ID
          # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
          workflow: ${{ matrix.components.workflow }}
          # Optional, will use the specified branch. Defaults to all branches
          branch: ${{ matrix.components.branch }}
          # Optional, defaults to current repo
          repo: ${{ matrix.components.repo }}
          # Optional, check the workflow run to whether it has an artifact
          # then will get the last available artifact from the previous workflow
          # default false, just try to download from the last one
          check_artifacts:  true
          # Optional, a directory where to extract artifact(s), defaults to the current directory
          path: todo2

      - name : Print sha
        run: |
          ls -R
          echo ${{ steps.download-artifact.outputs.head_sha }}

  # This workflow contains a single job called "build"
  upload:
    runs-on: ubuntu-latest
    needs: download
    steps:
      - name: Display structure of downloaded files
        run: ls -la